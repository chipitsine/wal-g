// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/wal-g/wal-g/internal/databases/redis/archive (interfaces: NetI)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNetI is a mock of NetI interface.
type MockNetI struct {
	ctrl     *gomock.Controller
	recorder *MockNetIMockRecorder
}

// MockNetIMockRecorder is the mock recorder for MockNetI.
type MockNetIMockRecorder struct {
	mock *MockNetI
}

// NewMockNetI creates a new mock instance.
func NewMockNetI(ctrl *gomock.Controller) *MockNetI {
	mock := &MockNetI{ctrl: ctrl}
	mock.recorder = &MockNetIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNetI) EXPECT() *MockNetIMockRecorder {
	return m.recorder
}

// LookupAddr mocks base method.
func (m *MockNetI) LookupAddr(arg0 string) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LookupAddr", arg0)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LookupAddr indicates an expected call of LookupAddr.
func (mr *MockNetIMockRecorder) LookupAddr(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LookupAddr", reflect.TypeOf((*MockNetI)(nil).LookupAddr), arg0)
}
